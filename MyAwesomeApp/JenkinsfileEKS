pipeline{
  environment {
  version = "version_$BUILD_NUMBER"
}
agent none
  /*agent {
  label 'dockerlabel'
}*/
stages {
  stage('checkout') {
  agent {
  label 'dockerlabel'
}
    steps {
      checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/swathi431/CICD.git']]])
    }
  }

  stage('build') {
    steps {
      sh 'mvn -f MyAwesomeApp/pom.xml clean install'
    }
  }
  stage('docker image') {
     steps {
       script{
        dockerImage = docker.build("swthi31/proj:$version","MyAwesomeApp")
       }
       }
  }
  stage('image push'){
    steps{
      script { 
					 docker.withRegistry( '', 'dockerhub' ) { 
						 dockerImage.push() 
					}
      }
    }
  }
	/*stage('run container'){
		steps{
			
			withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'k8sid', namespace: '', serverUrl: '') {
    					sh 'kubectl apply -f MyAwesomeApp/springboot-lb.yaml' 
				}
			
		}
		
	}*/
	
	
    
}
}
